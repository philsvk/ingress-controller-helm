apiVersion: v1
kind: Service
metadata:
  name: ingress-nginx-new-controller
  namespace: ingress-nginx
  uid: 7c318f0b-8251-4cfb-928d-4c82d4c87848
  resourceVersion: '157662'
  creationTimestamp: '2023-12-07T07:40:27Z'
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx-new
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.4
    helm.sh/chart: ingress-nginx-4.8.4
  annotations:
    meta.helm.sh/release-name: ingress-nginx-new
    meta.helm.sh/release-namespace: ingress-nginx
  finalizers:
    - service.kubernetes.io/load-balancer-cleanup
  managedFields:
    - manager: helm
      operation: Update
      apiVersion: v1
      time: '2023-12-07T07:40:27Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
        f:spec:
          f:allocateLoadBalancerNodePorts: {}
          f:externalTrafficPolicy: {}
          f:internalTrafficPolicy: {}
          f:ipFamilies: {}
          f:ipFamilyPolicy: {}
          f:ports:
            .: {}
            k:{"port":80,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
            k:{"port":443,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector: {}
          f:sessionAffinity: {}
          f:type: {}
    - manager: aws-cloud-controller-manager
      operation: Update
      apiVersion: v1
      time: '2023-12-07T07:40:29Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:finalizers:
            .: {}
            v:"service.kubernetes.io/load-balancer-cleanup": {}
        f:status:
          f:loadBalancer:
            f:ingress: {}
      subresource: status
  selfLink: /api/v1/namespaces/ingress-nginx/services/ingress-nginx-new-controller
status:
  loadBalancer:
    ingress:
      - hostname: >-
          a7c318f0b82514cfb928d4c82d4c8784-1765683936.ap-southeast-1.elb.amazonaws.com
spec:
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: http
      nodePort: 32435
    - name: https
      protocol: TCP
      port: 443
      targetPort: https
      nodePort: 30825
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx-new
    app.kubernetes.io/name: ingress-nginx
  clusterIP: 10.100.87.148
  clusterIPs:
    - 10.100.87.148
  type: LoadBalancer
  sessionAffinity: None
  externalTrafficPolicy: Cluster
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  allocateLoadBalancerNodePorts: true
  internalTrafficPolicy: Cluster